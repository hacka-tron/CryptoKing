{"ast":null,"code":"import { AuthService } from \"../../services/auth.service\";\nimport { CurrencyService } from 'app/services/currency.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/services/currency.service\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = a0 => ({\n  currency: a0\n});\nconst _c1 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction CurrenciesListComponent_div_1_ng_template_1_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function CurrenciesListComponent_div_1_ng_template_1_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const currencyProp_r3 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.toggleToBuy(currencyProp_r3));\n    });\n    i0.ɵɵelement(1, \"i\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const currencyProp_r3 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", currencyProp_r3.toBuy ? \"toBuy\" : \"\");\n  }\n}\nfunction CurrenciesListComponent_div_1_ng_template_1_ul_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 16)(1, \"li\", 17);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"li\", 17);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"li\", 17);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const currency_r5 = i0.ɵɵnextContext().currency;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Value: \", i0.ɵɵpipeBind1(3, 3, currency_r5.USD.price), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Market Cap: \", i0.ɵɵpipeBind1(6, 5, currency_r5.USD.market_cap), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" 24h Volume: \", i0.ɵɵpipeBind1(9, 7, currency_r5.USD.volume_24h), \" \");\n  }\n}\nfunction CurrenciesListComponent_div_1_ng_template_1_form_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", null, 1)(2, \"div\", 18)(3, \"label\");\n    i0.ɵɵtext(4, \"How much do you want to invest?($)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 19, 2);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CurrenciesListComponent_div_1_ng_template_1_form_12_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const currencyProp_r3 = i0.ɵɵnextContext(2).$implicit;\n      i0.ɵɵtwoWayBindingSet(currencyProp_r3.beingBought, $event) || (currencyProp_r3.beingBought = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\", 20);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 21);\n    i0.ɵɵtext(10, \" Must add an input \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 21);\n    i0.ɵɵtext(12, \" You must spend at least $1 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 21);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function CurrenciesListComponent_div_1_ng_template_1_form_12_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const currency_r5 = i0.ɵɵnextContext().currency;\n      const currencyProp_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.buyCoin(currencyProp_r3.beingBought, currency_r5.id, ctx_r3.curWalletId));\n    });\n    i0.ɵɵtext(16, \" Buy Coin \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const coinForm_r7 = i0.ɵɵreference(1);\n    const curAmmount_r8 = i0.ɵɵreference(6);\n    const currency_r5 = i0.ɵɵnextContext().currency;\n    const currencyProp_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtwoWayProperty(\"ngModel\", currencyProp_r3.beingBought);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c1, curAmmount_r8.errors && curAmmount_r8.touched))(\"max\", ctx_r3.dollarAmmount);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", !(currencyProp_r3.beingBought > 0));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", currency_r5.symbol, \": \", ctx_r3.findPropById(currency_r5.id).beingBought / currency_r5.USD.price, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"hidden\", !(curAmmount_r8.errors == null ? null : curAmmount_r8.errors.required));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", !(curAmmount_r8.errors == null ? null : curAmmount_r8.errors.min));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", !(curAmmount_r8.errors == null ? null : curAmmount_r8.errors.max));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" You can only invest a maximum of $\", ctx_r3.dollarAmmount, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", !coinForm_r7.form.valid);\n  }\n}\nfunction CurrenciesListComponent_div_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 6)(1, \"h3\")(2, \"span\", 7);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementStart(5, \"div\", 8);\n    i0.ɵɵtemplate(6, CurrenciesListComponent_div_1_ng_template_1_button_6_Template, 2, 1, \"button\", 9);\n    i0.ɵɵelementStart(7, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function CurrenciesListComponent_div_1_ng_template_1_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const currencyProp_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.toggleFavorites(currencyProp_r3));\n    });\n    i0.ɵɵelement(8, \"i\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function CurrenciesListComponent_div_1_ng_template_1_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const currencyProp_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.toggleCurrencyHide(currencyProp_r3));\n    });\n    i0.ɵɵelement(10, \"i\", 12);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(11, CurrenciesListComponent_div_1_ng_template_1_ul_11_Template, 10, 9, \"ul\", 13)(12, CurrenciesListComponent_div_1_ng_template_1_form_12_Template, 17, 13, \"form\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const currency_r5 = ctx.currency;\n    const currencyProp_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"#\", currency_r5.rank, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", currency_r5.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.userIsAuthenticated);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", currencyProp_r3.isFavorite ? \"isFav\" : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", currencyProp_r3.hide ? \"fa fa-plus\" : \"fa fa-minus\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !currencyProp_r3.hide);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", currencyProp_r3.toBuy);\n  }\n}\nfunction CurrenciesListComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, CurrenciesListComponent_div_1_ng_template_1_Template, 13, 7, \"ng-template\", 5, 0, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const currencyProp_r3 = ctx.$implicit;\n    const setCurrencyProp_r9 = i0.ɵɵreference(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0, currencyProp_r3.currency))(\"ngTemplateOutlet\", setCurrencyProp_r9);\n  }\n}\nexport let CurrenciesListComponent = /*#__PURE__*/(() => {\n  class CurrenciesListComponent {\n    constructor(currencyService, authService) {\n      this.currencyService = currencyService;\n      this.authService = authService;\n      this.favoritesOnly = false;\n      this.currencyProps = [];\n      this.favNum = 0;\n      this.curNum = 0;\n      this.userIsAuthenticated = false;\n    }\n    ngOnInit() {\n      //Certains buttons shouldn't appear when loged in/out\n      this.userIsAuthenticated = this.authService.getIsAuth();\n      this.authListnerSubs = this.authService.getAuthStatusListner().subscribe(isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n      });\n      if (this.userIsAuthenticated) {\n        this.currencyService.getDollars();\n        this.dollarListenerSubs = this.currencyService.getUpdatedDollarListener().subscribe(dollars => {\n          this.dollarAmmount = dollars;\n        });\n        this.currencyService.getActiveWalletId();\n        this.walletIdListenerSubs = this.currencyService.getUpdatedActiveWalletIdListner().subscribe(activeWalletId => {\n          this.curWalletId = activeWalletId;\n        });\n      }\n      this.currencyService.getCurrencies();\n      this.currencyListenerSubs = this.getCurrencyListener().subscribe(currencies => {\n        this.currencies = currencies;\n        this.currencyProps = [];\n        //Adds the properties for the dollar currency\n        this.currencies.forEach((cur, index) => {\n          this.currencyProps.push({\n            currency: cur,\n            hide: true,\n            isFavorite: this.favoritesOnly,\n            toBuy: false,\n            beingBought: 0\n          });\n        });\n      });\n    }\n    buyCoin(ammount, coinId, walletId) {\n      if (confirm(\"Are You Sure?\")) {\n        this.currencyService.buyCoin(ammount, coinId, walletId);\n        const curProp = this.currencyService.findItemById(coinId, this.currencyProps);\n        curProp.beingBought = 0;\n        this.toggleToBuy(curProp);\n      }\n    }\n    toggleCurrencyHide(currencyProp) {\n      if (currencyProp.toBuy) {\n        this.toggleToBuy(currencyProp);\n      }\n      currencyProp.hide = !currencyProp.hide;\n    }\n    toggleToBuy(currencyProp) {\n      if (!currencyProp.hide) {\n        this.toggleCurrencyHide(currencyProp);\n      }\n      currencyProp.toBuy = !currencyProp.toBuy;\n    }\n    toggleFavorites(currencyProp) {\n      currencyProp.isFavorite = !currencyProp.isFavorite;\n      if (currencyProp.isFavorite) {\n        this.currencyService.addFavorite(currencyProp.currency);\n      } else {\n        this.currencyService.removeFavorite(currencyProp.currency);\n      }\n    }\n    getCurrencyListener() {\n      return this.favoritesOnly ? this.currencyService.getUpdatedFavoritesListener() : this.currencyService.getUpdatedCurrenciesListner();\n    }\n    findPropById(id) {\n      return this.currencyService.findItemById(id, this.currencyProps);\n    }\n    ngOnDestroy() {\n      this.authListnerSubs.unsubscribe();\n      this.currencyListenerSubs.unsubscribe();\n      if (this.dollarListenerSubs) {\n        this.dollarListenerSubs.unsubscribe();\n      }\n      if (this.walletIdListenerSubs) {\n        this.walletIdListenerSubs.unsubscribe();\n      }\n    }\n    static #_ = this.ɵfac = function CurrenciesListComponent_Factory(t) {\n      return new (t || CurrenciesListComponent)(i0.ɵɵdirectiveInject(i1.CurrencyService), i0.ɵɵdirectiveInject(i2.AuthService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CurrenciesListComponent,\n      selectors: [[\"currencies-list\"]],\n      inputs: {\n        favoritesOnly: \"favoritesOnly\"\n      },\n      decls: 2,\n      vars: 1,\n      consts: [[\"setCurrencyProp\", \"\"], [\"coinForm\", \"ngForm\"], [\"curAmmount\", \"ngModel\"], [1, \"list-unstyled\", \"m-3\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngTemplateOutletContext\", \"ngTemplateOutlet\"], [1, \"card\", \"card-body\", \"mb-2\", \"bg-light\"], [1, \"rank\"], [1, \"float-end\"], [\"class\", \"btn-dark btn\", 3, \"click\", 4, \"ngIf\"], [1, \"btn-dark\", \"btn\", 3, \"click\"], [1, \"fa\", \"fa-star\", 3, \"ngClass\"], [3, \"ngClass\"], [\"class\", \"list-group\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"fa\", \"fa-dollar\", 3, \"ngClass\"], [1, \"list-group\"], [1, \"list-group-item\"], [1, \"form-group\"], [\"type\", \"number\", \"name\", \"curAmmount\", \"required\", \"\", \"min\", \"1\", \"ng-pattern\", \"integerval\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\", \"ngClass\", \"max\"], [3, \"hidden\"], [1, \"invalid-feedback\", 3, \"hidden\"], [1, \"btn\", \"btn-block\", \"btn-dark\", \"mb-3\", 3, \"click\", \"disabled\"]],\n      template: function CurrenciesListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ul\", 3);\n          i0.ɵɵtemplate(1, CurrenciesListComponent_div_1_Template, 3, 4, \"div\", 4);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.currencyProps);\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i3.NgTemplateOutlet, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinValidator, i4.MaxValidator, i4.NgModel, i4.NgForm, i3.CurrencyPipe],\n      styles: [\".isFav[_ngcontent-%COMP%]{color:#ff0}.toBuy[_ngcontent-%COMP%]{color:green}.coinListings[_ngcontent-%COMP%]{max-width:600px;text-align:center;margin:auto}.rank[_ngcontent-%COMP%]{float:left;color:gray}\"]\n    });\n  }\n  return CurrenciesListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}