{"ast":null,"code":"import { HttpRequest, HttpHandler } from \"@angular/common/http\";\nimport { AuthService } from \"../services/auth.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    constructor(authService) {\n      this.authService = authService;\n      this.urlsToWhiteList = [\"https://pro-api.coinmarketcap.com\"];\n    }\n    //Intercepts http requests in order to add the token to them, unless that url is whitelisted\n    intercept(req, next) {\n      const authToken = this.authService.getToken();\n      if (this.checkWhiteList(req.url)) {\n        const authRequest = req.clone({\n          headers: req.headers.set(\"Authorization\", \"Bearer \" + authToken)\n        });\n        return next.handle(authRequest);\n      }\n      return next.handle(req);\n    }\n    checkWhiteList(incomingUrl) {\n      for (var url of this.urlsToWhiteList) {\n        if (incomingUrl.indexOf(url) != -1) {\n          return false;\n        }\n      }\n      return true;\n    }\n    static #_ = this.ɵfac = function AuthInterceptor_Factory(t) {\n      return new (t || AuthInterceptor)(i0.ɵɵinject(i1.AuthService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthInterceptor,\n      factory: AuthInterceptor.ɵfac\n    });\n  }\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}