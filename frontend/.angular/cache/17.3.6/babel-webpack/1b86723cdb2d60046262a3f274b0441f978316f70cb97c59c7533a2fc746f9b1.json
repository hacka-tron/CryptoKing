{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar forms_1 = require(\"@angular/forms\");\nvar lang_1 = require(\"../facade/lang\");\nexports.creditCard = function (control) {\n  if (lang_1.isPresent(forms_1.Validators.required(control))) return null;\n  var v = control.value;\n  var sanitized = v.replace(/[^0-9]+/g, '');\n  // problem with chrome\n  if (!/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/.test(sanitized)) {\n    return {\n      creditCard: true\n    };\n  }\n  var sum = 0;\n  var digit;\n  var tmpNum;\n  var shouldDouble;\n  for (var i = sanitized.length - 1; i >= 0; i--) {\n    digit = sanitized.substring(i, i + 1);\n    tmpNum = parseInt(digit, 10);\n    if (shouldDouble) {\n      tmpNum *= 2;\n      if (tmpNum >= 10) {\n        sum += tmpNum % 10 + 1;\n      } else {\n        sum += tmpNum;\n      }\n    } else {\n      sum += tmpNum;\n    }\n    shouldDouble = !shouldDouble;\n  }\n  if (Boolean(sum % 10 === 0 ? sanitized : false)) {\n    return null;\n  }\n  return {\n    creditCard: true\n  };\n};\n//# sourceMappingURL=validator.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}