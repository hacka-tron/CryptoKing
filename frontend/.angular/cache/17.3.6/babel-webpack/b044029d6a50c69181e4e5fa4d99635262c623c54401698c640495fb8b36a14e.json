{"ast":null,"code":"export function get_phone_code(country_metadata) {\n  return country_metadata[0];\n}\nexport function get_national_number_pattern(country_metadata) {\n  return country_metadata[1];\n}\nexport function get_formats(country_metadata) {\n  return country_metadata[2] || [];\n}\nexport function get_national_prefix(country_metadata) {\n  return country_metadata[3];\n}\nexport function get_national_prefix_formatting_rule(country_metadata) {\n  return country_metadata[4];\n}\nexport function get_national_prefix_for_parsing(country_metadata) {\n  var national_prefix_for_parsing = country_metadata[5];\n\n  // If `national_prefix_for_parsing` is not set explicitly,\n  // then infer it from `national_prefix` (if any)\n  if (!national_prefix_for_parsing) {\n    national_prefix_for_parsing = get_national_prefix(country_metadata);\n  }\n  return national_prefix_for_parsing;\n}\nexport function get_national_prefix_transform_rule(country_metadata) {\n  return country_metadata[6];\n}\nexport function get_national_prefix_is_optional_when_formatting(country_metadata) {\n  return country_metadata[7];\n}\nexport function get_leading_digits(country_metadata) {\n  return country_metadata[8];\n}\nexport function get_format_pattern(format_array) {\n  return format_array[0];\n}\nexport function get_format_format(format_array) {\n  return format_array[1];\n}\nexport function get_format_leading_digits_patterns(format_array) {\n  return format_array[2] || [];\n}\nexport function get_format_national_prefix_formatting_rule(format_array, country_metadata) {\n  return format_array[3] || get_national_prefix_formatting_rule(country_metadata);\n}\nexport function get_format_national_prefix_is_optional_when_formatting(format_array, country_metadata) {\n  return format_array[4] || get_national_prefix_is_optional_when_formatting(country_metadata);\n}\nexport function get_format_national_prefix_is_mandatory_when_formatting(format_array, country_metadata) {\n  var national_prefix_formatting_rule = get_format_national_prefix_formatting_rule(format_array, country_metadata);\n\n  // National prefix is omitted if there's no national prefix formatting rule\n  // set for this country, or when the national prefix formatting rule\n  // contains no national prefix itself, or when this rule is set but\n  // national prefix is optional for this phone number format\n  // (and it is not enforced explicitly)\n  return national_prefix_formatting_rule &&\n  // Check that national prefix formatting rule is not a dummy one.\n  // Check that national prefix formatting rule actually has national prefix digit(s).\n  get_format_uses_national_prefix(national_prefix_formatting_rule) &&\n  // Or maybe national prefix is optional for this format\n  !get_format_national_prefix_is_optional_when_formatting(format_array, country_metadata);\n}\n\n// Checks whether national prefix formatting rule contains national prefix\nexport function get_format_uses_national_prefix(national_prefix_formatting_rule) {\n  // Check that national prefix formatting rule is not a dummy one\n  return national_prefix_formatting_rule !== '$1' &&\n  // Check that national prefix formatting rule actually has national prefix digit(s)\n  /\\d/.test(national_prefix_formatting_rule.replace('$1', ''));\n}\nexport function get_format_international_format(format_array) {\n  return format_array[5] || get_format_format(format_array);\n}\n\n// Formatting information for regions which share\n// a country calling code is contained by only one region\n// for performance reasons. For example, for NANPA region\n// (\"North American Numbering Plan Administration\",\n//  which includes USA, Canada, Cayman Islands, Bahamas, etc)\n// it will be contained in the metadata for `US`.\nexport function get_metadata_by_country_phone_code(country_phone_code, metadata) {\n  var country_code = metadata.country_phone_code_to_countries[country_phone_code][0];\n  return metadata.countries[country_code];\n}\nexport function get_types(country_metadata) {\n  return country_metadata[9];\n}\nfunction get_type(country_metadata, index) {\n  return get_types(country_metadata) ? get_types(country_metadata)[index] : undefined;\n}\nexport function get_type_fixed_line(country_metadata) {\n  return get_type(country_metadata, 0);\n}\nexport function get_type_mobile(country_metadata) {\n  return get_type(country_metadata, 1);\n}\nexport function get_type_toll_free(country_metadata) {\n  return get_type(country_metadata, 2);\n}\nexport function get_type_premium_rate(country_metadata) {\n  return get_type(country_metadata, 3);\n}\nexport function get_type_personal_number(country_metadata) {\n  return get_type(country_metadata, 4);\n}\nexport function get_type_voice_mail(country_metadata) {\n  return get_type(country_metadata, 5);\n}\nexport function get_type_uan(country_metadata) {\n  return get_type(country_metadata, 6);\n}\nexport function get_type_pager(country_metadata) {\n  return get_type(country_metadata, 7);\n}\nexport function get_type_voip(country_metadata) {\n  return get_type(country_metadata, 8);\n}\nexport function get_type_shared_cost(country_metadata) {\n  return get_type(country_metadata, 9);\n}\nexport function get_country_phone_code(country, country_metadata) {\n  return get_phone_code(country_metadata[country]);\n}\n//# sourceMappingURL=metadata.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}